Index: projects/libunwind/src/Unwind-EHABI.cpp
===================================================================
--- projects/libunwind/src/Unwind-EHABI.cpp	(版本 4)
+++ projects/libunwind/src/Unwind-EHABI.cpp	(工作副本)
@@ -997,7 +997,7 @@
                                            exception_object);
 }
 
-_LIBUNWIND_EXPORT extern "C" _Unwind_Reason_Code
+extern "C" _LIBUNWIND_EXPORT _Unwind_Reason_Code
 __gnu_unwind_frame(_Unwind_Exception *exception_object,
                    struct _Unwind_Context *context) {
   unw_cursor_t *cursor = (unw_cursor_t *)context;
Index: projects/openmp/runtime/src/z_Linux_util.c
===================================================================
--- projects/openmp/runtime/src/z_Linux_util.c	(版本 6)
+++ projects/openmp/runtime/src/z_Linux_util.c	(工作副本)
@@ -61,7 +61,7 @@
 #include <fcntl.h>
 
 // For non-x86 architecture
-#if KMP_COMPILER_GCC && !(KMP_ARCH_X86 || KMP_ARCH_X86_64 || KMP_ARCH_PPC64 || KMP_ARCH_AARCH64)
+#if !(KMP_ARCH_X86 || KMP_ARCH_X86_64 || KMP_ARCH_PPC64 || KMP_ARCH_AARCH64)
 # include <stdbool.h>
 # include <ffi.h>
 #endif
@@ -2616,7 +2616,7 @@
 #endif // USE_LOAD_BALANCE
 
 
-#if KMP_COMPILER_GCC && !(KMP_ARCH_X86 || KMP_ARCH_X86_64 || KMP_ARCH_PPC64 || KMP_ARCH_AARCH64)
+#if !(KMP_ARCH_X86 || KMP_ARCH_X86_64 || KMP_ARCH_PPC64 || KMP_ARCH_AARCH64)
 
 int __kmp_invoke_microtask( microtask_t pkfn, int gtid, int tid, int argc,
         void *p_argv[] 
@@ -2661,7 +2661,7 @@
     return 1;
 }
 
-#endif // KMP_COMPILER_GCC && !(KMP_ARCH_X86 || KMP_ARCH_X86_64 || KMP_ARCH_PPC64)
+#endif // !(KMP_ARCH_X86 || KMP_ARCH_X86_64 || KMP_ARCH_PPC64)
 
 #if KMP_ARCH_PPC64 || KMP_ARCH_AARCH64
 
